import { Tree, formatFiles, installPackagesTask } from '@nrwl/devkit';
import { SchemaInterface } from './schema.interface';
import {
  accessSync,
  constants,
  existsSync,
  readFileSync,
  readSync,
  writeFileSync,
} from 'fs';
import { exit } from 'process';
import { EOL } from 'os';
import { execSync } from 'child_process';

export default async function (tree: Tree, schema: SchemaInterface) {
  if (!existsSync(schema.prismix)) {
    throw new Error('Prismix File does not exist!');
  }

  const prismixContent = JSON.parse(readFileSync(schema.prismix, 'utf8'));
  const prismaSchemaInputFiles = prismixContent.input;
  const prismaSchemaOutputFile = prismixContent.output;

  let prismaContent = '';
  prismaContent = prismaContent + '// WARNING' + EOL;
  prismaContent =
    prismaContent +
    '// THIS FILE IS AUTOGENERATED BY A WORKSPACE GENERATOR' +
    EOL;
  prismaContent =
    prismaContent + '// DO NOT MANUALLY EDIT THIS FILE!' + EOL + EOL;

  prismaSchemaInputFiles.forEach((schemaFile) => {
    const content = readFileSync(schemaFile, 'utf8');
    prismaContent = prismaContent + content;
  });

  writeFileSync(prismaSchemaOutputFile, prismaContent, { encoding: 'utf8' });

  if (schema.format) {
    execSync('npx prisma format');
  }

  return;
}
